{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet WithinProjectComponent = class WithinProjectComponent {\n  constructor(addProject, activateRoute, router, broker, _location) {\n    this.addProject = addProject;\n    this.activateRoute = activateRoute;\n    this.router = router;\n    this.broker = broker;\n    this._location = _location;\n    this.id = this.activateRoute.snapshot.params['id'];\n    this.slug = this.activateRoute.snapshot.params['slug'];\n    this.author = this.activateRoute.snapshot.params['author'];\n    console.log(\"DATA WITHIN PROJECT\", [parseInt(this.id), this.slug, this.author]);\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.home = localStorage.getItem('home');\n    this.homeSlider = localStorage.getItem('home_slider');\n    console.log(\"HOMEEEEE LOCAL STORAGE\", this.home);\n    console.log(\"HOMEEEEE LOCAL STORAGE SLIDER\", this.homeSlider);\n    this.broker.projectsService(this.slug).subscribe(response => {\n      this.workers = response;\n      console.log(\"TTTTTTTT 1\", this.workers);\n\n      if (this.workers.data[0].workers[0] == undefined) {\n        this.router.navigate(['/']);\n      } else {\n        if (this.home == 'true' && this.homeSlider == 'false') {\n          console.log(\"ENTRE AL PROYECTOS HOME\");\n          this.broker.workerProjects(this.author).subscribe(response => {\n            this.authorWorker = response;\n            this.broker.projectsItemsHome().subscribe(response => {\n              this.projectsData = response;\n              this.projects = this.projectsData.data;\n              const refreshProject = this.projects.find(p => p.id === parseInt(this.id));\n              this.projectAuthor = refreshProject;\n              console.log(\"TTTTTTTT 2 HOME\", this.projectAuthor);\n              const nextProject = this.projects[Math.floor(Math.random() * this.projects.length)];\n              this.nextProjectUp = nextProject;\n              console.log(\"NEXT-Project\", this.nextProjectUp);\n              this.changeColor();\n              this.addProject.spinnerActive = false;\n            });\n          });\n        } else if (this.home == 'true' && this.homeSlider == 'true') {\n          console.log(\"ENTRE AL HOME SLIDER\");\n          this.broker.workerProjects(this.author).subscribe(response => {\n            this.authorWorker = response;\n            this.broker.projectsItemsSlider().subscribe(response => {\n              this.projectsDataSlider = response;\n              this.projects = this.projectsDataSlider.data;\n              const refreshProject = this.projects.find(p => p.id === parseInt(this.id));\n              this.projectAuthor = refreshProject;\n              console.log(\"TTTTTTTT 2 HOME\", this.projectAuthor);\n              const nextProject = this.projects[Math.floor(Math.random() * this.projects.length)];\n              this.nextProjectUp = nextProject;\n              console.log(\"NEXT-Project\", this.nextProjectUp);\n              this.changeColor();\n              this.addProject.spinnerActive = false;\n            });\n          });\n        } else {\n          console.log(\"ENTRE AL PROYECTOS CATEGORIA\");\n          this.broker.workerProjects(this.author).subscribe(response => {\n            var _a;\n\n            this.authorWorker = response;\n            console.log(\"TTTTTTTT 2\", this.authorWorker);\n            this.projects = (_a = this.authorWorker) === null || _a === void 0 ? void 0 : _a.data[0].projects;\n            console.log(\"ProjectSSSS\", this.projects);\n            const refreshProject = this.projects.find(p => p.project_id.id === parseInt(this.id));\n            this.projectAuthor = refreshProject.project_id;\n            console.log(\"MAIN-Project\", this.projectAuthor);\n            const nextProject = this.projects[Math.floor(Math.random() * this.projects.length)];\n            this.nextProjectUp = nextProject === null || nextProject === void 0 ? void 0 : nextProject.project_id;\n            console.log(\"NEXT-Project\", this.nextProjectUp);\n            this.changeColor();\n            this.addProject.spinnerActive = false;\n          });\n        }\n      }\n    });\n    this.addProject.spinnerActive = false;\n  }\n\n  withinProject(proj, author, id, home, homeSLider) {\n    console.log(\"PROJJ NEXT PROYECT\", [proj, author, id, home, homeSLider]);\n    this.addProject.openProject(proj, author, id, home, homeSLider);\n  }\n\n  getBg(color) {\n    switch (color) {\n      case 'edicion':\n        return 'edition';\n        break;\n\n      case 'correccion-de-color':\n        return 'color';\n        break;\n\n      case 'animacion':\n        return 'animation';\n        break;\n\n      case 'online':\n        return 'online';\n        break;\n\n      case 'musica-original':\n        return 'music';\n        break;\n\n      default:\n        return '';\n    }\n  }\n\n  changeColor() {\n    var change = $(\".project-in\");\n    console.log(\"COLOR BG\", this.slug);\n\n    switch (this.slug) {\n      case 'edicion':\n        change.addClass(\"edition\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'correccion-de-color':\n        change.addClass(\"color\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'animacion':\n        change.addClass(\"animation\");\n        change.removeClass(\"color\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'online':\n        change.addClass(\"online\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'musica-original':\n        change.addClass(\"music\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"edition\");\n        break;\n\n      default:\n        return '';\n    }\n  }\n\n};\nWithinProjectComponent = __decorate([Component({\n  selector: 'app-within-project',\n  templateUrl: './within-project.component.html',\n  styleUrls: ['./within-project.component.scss']\n})], WithinProjectComponent);\nexport { WithinProjectComponent };","map":null,"metadata":{},"sourceType":"module"}