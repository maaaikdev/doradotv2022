{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst headers = new HttpHeaders({\n  'Content-Type': 'application-json'\n});\nexport let BrokerService = /*#__PURE__*/(() => {\n  class BrokerService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    menuOptions() {\n      return this.http.get(environment.apiEndPoint + environment.menuOptions.menu, {\n        headers\n      });\n    }\n\n    projectsItems() {\n      return this.http.get(environment.apiEndPoint + environment.menuOptions.project, {\n        headers\n      });\n    }\n\n    projectsItemsSlider() {\n      return this.http.get(environment.apiEndPoint + environment.menuOptions.project + environment.filters.projectFilter, {\n        headers\n      });\n    }\n\n    projectsItemsHome() {\n      return this.http.get(environment.apiEndPoint + environment.menuOptions.project + environment.filters.projectHome, {\n        headers\n      });\n    }\n\n    workerItems() {\n      return this.http.get(environment.apiEndPoint + environment.menuOptions.worker, {\n        headers\n      });\n    } // workerProjects(){\n    // \treturn this.http.get(environment.apiEndPoint + environment.menuOptions.worker + environment.filters.workersProject, {headers})\n    // }\n\n\n    workerProjects(author) {\n      return this.http.get(environment.apiEndPoint + environment.menuOptions.worker + environment.filters.workersProject + author + '[nempty]&fields=*.*.*.*.*', {\n        headers\n      });\n    }\n\n    workerProjects1() {\n      return this.http.get('https://admin.dorado.tv/doradotv/items/worker?filter%5bslug%5d%5beq%5d=julian-rivera-contreras&fields=*.*.*.*.*', {\n        headers\n      });\n    }\n\n    projectsService(category) {\n      return this.http.get(environment.apiEndPoint + environment.menuOptions.service + environment.filters.projectPerService + category + '&fields=*.*.*.*.*', {\n        headers\n      });\n    }\n\n  }\n\n  BrokerService.ɵfac = function BrokerService_Factory(t) {\n    return new (t || BrokerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  BrokerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BrokerService,\n    factory: BrokerService.ɵfac,\n    providedIn: 'root'\n  });\n  return BrokerService;\n})();","map":null,"metadata":{},"sourceType":"module"}