{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet WithinProjectComponent = class WithinProjectComponent {\n  constructor(addProject, activateRoute, router, broker, _location) {\n    this.addProject = addProject;\n    this.activateRoute = activateRoute;\n    this.router = router;\n    this.broker = broker;\n    this._location = _location;\n    this.id = this.activateRoute.snapshot.params['id'];\n    this.slug = this.activateRoute.snapshot.params['slug'];\n    this.author = this.activateRoute.snapshot.params['author'];\n    console.log(\"DATA WITHIN PROJECT\", [this.id, this.slug, this.author]);\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.changeColor(); //console.log(\"NEXT PROJECT A\", this.addProject.nextProjectAdd);\n    //console.log(\"NEXT PROJECT 1\", this.addProject.projectAuthor);\n    // //this.nextProject(this.addProject.projectAuthor)\n    // this.nextProjectUp = this.addProject.nextProjectAdd.find((p) => p.id === this.addProject.projectAuthor.id+1);\n    // console.log(\"NEXT PROJECT 2\", this.nextProjectUp);\n    //////\t\t\n\n    this.broker.projectsService(this.slug).subscribe(response => {\n      this.addProject.spinnerActive = true;\n      this.workers = response;\n\n      if (this.workers.data[0].workers[0] == undefined) {\n        this.router.navigate(['/']);\n      } else {\n        this.broker.workerProjects(this.author).subscribe(response => {\n          var _a;\n\n          this.authorWorker = response;\n          this.projects = (_a = this.authorWorker) === null || _a === void 0 ? void 0 : _a.data[0].projects;\n          console.log(\"PROJECTS WITHIN\", this.projects.forEach(element => {\n            console.log(\"eLEMENT\", element);\n          }));\n          const refreshProject = this.projects.find(p => p.project_id.gif.id === parseInt(this.id));\n          this.projectAuthor = refreshProject.project_id;\n          console.log(\"MAIN-Project\", this.projectAuthor);\n          const nextProject = this.projects.find(p => p.id === this.projectAuthor.id + 1);\n          this.nextProjectUp = nextProject;\n          console.log(\"NEXT-Project\", this.nextProjectUp);\n          this.addProject.spinnerActive = false;\n        });\n        this.addProject.spinnerActive = false;\n      }\n    });\n  } // withinProject(proj) {\n  // \tthis.addProject.projectAuthor = proj;\n  // \tthis.nextProjectUp = this.addProject.nextProjectAdd.find((p) => p.id === this.addProject.projectAuthor.id+1);\n  // \tif(this.nextProjectUp == undefined) {\n  // \t\tthis.nextProjectUp = this.addProject.nextProjectAdd.data.shift();\n  // \t}\n  // }\n\n\n  withinProject(proj, author, id) {\n    console.log(\"PROJJ NEXT PROYECT\", [proj, author, id]);\n    this.addProject.openProject(proj, author, id); //this.reloadCurrentRoute()\n    //this.addProject.nextProject(this.nextProjectUp.data[0].projects);\n  } // nextProject(next) {\n  // \tthis.nextProjectAdd = next\n  // \tconsole.log(\"NEXT NEXT 11111\", this.nextProjectAdd)\n  // }\n\n\n  getBg(color) {\n    switch (color) {\n      case 'edicion':\n        return 'edition';\n        break;\n\n      case 'correccion-de-color':\n        return 'color';\n        break;\n\n      case 'animacion':\n        return 'animation';\n        break;\n\n      case 'online':\n        return 'online';\n        break;\n\n      case 'musica-original':\n        return 'music';\n        break;\n\n      default:\n        return '';\n    }\n  }\n\n  changeColor() {\n    var change = $(\".project-in\");\n    console.log(\"COLOR BG\", this.slug);\n\n    switch (this.slug) {\n      case 'edicion':\n        change.addClass(\"edition\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'correccion-de-color':\n        change.addClass(\"color\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'animacion':\n        change.addClass(\"animation\");\n        change.removeClass(\"color\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'online':\n        change.addClass(\"online\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'musica-originall':\n        change.addClass(\"music\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"edition\");\n        break;\n\n      default:\n        return '';\n    }\n  }\n\n};\nWithinProjectComponent = __decorate([Component({\n  selector: 'app-within-project',\n  templateUrl: './within-project.component.html',\n  styleUrls: ['./within-project.component.scss']\n})], WithinProjectComponent);\nexport { WithinProjectComponent };","map":null,"metadata":{},"sourceType":"module"}