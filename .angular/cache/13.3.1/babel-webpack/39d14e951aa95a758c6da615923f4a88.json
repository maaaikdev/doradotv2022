{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nlet NavComponent = class NavComponent {\n  constructor(broker, router, project) {\n    this.broker = broker;\n    this.router = router;\n    this.project = project;\n    this.scroll = false;\n  }\n\n  onScroll(event) {\n    if (window.pageYOffset !== 0) {\n      this.scroll = true;\n    } else {\n      this.scroll = false;\n    }\n  }\n\n  ngOnInit() {\n    this.configHeader();\n    this.broker.menuOptions().subscribe(response => {\n      this.menuArray = response.data;\n      console.log(\"MENU\", this.menuArray);\n      this.menuArray.forEach(element => {\n        this.btnCta = element.id;\n        console.log(\"MENU 2\", this.btnCta);\n      });\n    });\n  }\n\n  configHeader() {\n    this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd) {\n        this.url = val.url.split('?')[0];\n      }\n\n      if (this.url == '/project') {}\n    });\n  }\n\n  onButtonGroupClick($event) {\n    let clickedElement = $event.target || $event.srcElement;\n\n    if (clickedElement.nodeName === \"A\") {\n      let isCertainButtonAlreadyActive = clickedElement.parentElement.querySelector(\".active\"); // if a Button already has Class: .active\n\n      if (isCertainButtonAlreadyActive) {\n        isCertainButtonAlreadyActive.classList.remove(\"active\");\n      }\n\n      clickedElement.className += \" active\";\n    }\n  }\n\n  btnColorMobile() {\n    if ($(window).width() >= 768) {\n      switch (this.btnCta) {\n        case 'edicion':\n          return 'edition';\n\n        case 'correccion-de-color':\n          return 'color';\n\n        case 'animacion':\n          return 'animation';\n\n        case 'online':\n          return 'online';\n\n        case 'musica-original':\n          return 'music';\n\n        default:\n          return '';\n      }\n    } else {}\n  }\n\n  changeColor(bg) {\n    var change = $(\".modal-body\");\n    var btnMenu = $(\".btn-aMenu\");\n\n    switch (bg) {\n      case 'Edición':\n        change.addClass(\"edition\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'Corrección de Color':\n        change.addClass(\"color\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'Animación':\n        change.addClass(\"animation\");\n        change.removeClass(\"color\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"online\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'Online':\n        change.addClass(\"online\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"edition\");\n        change.removeClass(\"music\");\n        break;\n\n      case 'Música Original':\n        change.addClass(\"music\");\n        change.removeClass(\"color\");\n        change.removeClass(\"animation\");\n        change.removeClass(\"online\");\n        change.removeClass(\"edition\");\n        break;\n\n      default:\n        return '';\n    }\n  }\n\n};\n\n__decorate([HostListener('window:scroll', ['$event'])], NavComponent.prototype, \"onScroll\", null);\n\nNavComponent = __decorate([Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})], NavComponent);\nexport { NavComponent };","map":null,"metadata":{},"sourceType":"module"}